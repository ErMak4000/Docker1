variables:
  K8S_API_URL: https://kubernetes.default
  CI_ENVIRONMENT_NAME: stage
  CI_DEBUG_TRACE: 'true'
#  IMAGE : $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
#  IMAGE: $CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
####
stages:
  - test
  - build
  - deploy

test:
  stage: test
  image: golang:1.14
  script:
    - echo OK
    - echo $K8S_API_URL

build:
  stage: build
  image: docker:19.03.12
  services:
    - docker:19.03.12-dind
  variables:
    DOCKER_DRIVER: overlay
    DOCKER_HOST: tcp://docker:2375 
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker build . -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID

deploy: &deploy
  stage: deploy
  image: bitnami/kubectl:1.23
  before_script:
    - cp $KUBECONFIG /tmp/.kubeconfig
    - kubectl config set-cluster k8s --insecure-skip-tls-verify=true --server=$K8S_API_URL
    - echo $K8S_CI_TOKEN
    - kubectl config set-credentials ci --token=$(echo $K8S_CI_TOKEN | base64 --decode)
    - kubectl config set-context ci --cluster=k8s --user=ci
    - kubectl config use-context ci
  script:
#    - kubectl set image deployment/$CI_PROJECT_NAME *=$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID --namespace $CI_ENVIRONMENT_NAME
    - sed -i "s,IMAGE,$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID,g" kube/deployment.yaml
    - sed -i "s,HOST,$CI_ENVIRONMENT_NAME,g" kube/ingress.yaml
    - sed -i "s,PATH,/$CI_ENVIRONMENT_NAME,g" kube/ingress.yaml
    - sed -i "s,NAME,$CI_PROJECT_NAME,g" kube/deployment.yaml
#    - sed -i "s|IMAGE|${IMAGE}|g" kube/deployment.yaml
#    - sed -i "s/image.*/'image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG.$CI_PIPELINE_ID'/" kube/deployment.yaml && sed -i "s/'//g" kube/deployment.yaml
    - kubectl apply -f kube/ --namespace $CI_ENVIRONMENT_NAME
    - kubectl rollout status deployment/$CI_PROJECT_NAME --namespace $CI_ENVIRONMENT_NAME || (kubectl rollout undo deployment/$CI_PROJECT_NAME --namespace $CI_ENVIRONMENT_NAME && exit 1)

#   - kubectl rollout status deployment/geekbrains --namespace $CI_ENVIRONMENT_NAME || (kubectl rollout undo deployment/$CI_PROJECT_NAME --namespace #$CI_ENVIRONMENT_NAME && exit 1)

deploy:stage:
  <<: *deploy
  environment:
    name: stage
  variables:
    K8S_CI_TOKEN: $K8S_STAGE_CI_TOKEN
  only:
    - master

deploy:prod:
  <<: *deploy
  environment:
    name: prod
  variables:
    K8S_CI_TOKEN: $K8S_PROD_CI_TOKEN
  only:
    - master
  when: manual
